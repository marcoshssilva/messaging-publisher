spring:
  application:
    name: messaging-publisher
  rabbitmq:
    username: ${SPRING_RABBITMQ_VIRTUAL_USERNAME:guest}
    password: ${SPRING_RABBITMQ_VIRTUAL_PASSWORD:guest}
    host: ${SPRING_RABBITMQ_HOST:localhost}
    virtual-host: ${SPRING_RABBITMQ_VIRTUAL_HOST:/}
    port: ${SPRING_RABBITMQ_PORT:5672}
  session:
    store-type: none # jdbc - if enabled, don't forget to change SessionCreationPolicy in AuthConfig
    jdbc:
      initialize-schema: never
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://127.0.0.1:5432/messaging_publisher_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  flyway:
    enabled: true
    driver-class-name: org.postgresql.Driver
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    schemas:
      - ${SPRING_DATASOURCE_SCHEMA:public}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
server:
  servlet:
    context-path: /messaging-publisher
  port: ${PORT:8080}
management:
  server:
    port: ${MANAGEMENT_PORT:8080}
  endpoints:
    web:
      exposure:
        include: '*'
    jmx:
      exposure:
        include: '*'
logging:
  level:
    ROOT: info